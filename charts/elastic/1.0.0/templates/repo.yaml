{{- /*
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    common.k8s.elastic.co/type: repo
    repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
  name: {{ include "elastic.fullname" . -}}-repo
  namespace: {{ include "elastic.namespace" . }}
spec:
  replicas: 2
  selector:
    matchLabels:
      common.k8s.elastic.co/type: repo
      repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        common.k8s.elastic.co/type: repo
        repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values: 
                - linux
#              - key: elastic
#                operator: In
#                values:
#                - all
      containers:
      - image: docker.elastic.co/package-registry/distribution:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: distribution
        env:
        - name: EPR_ADDRESS
          value: '0.0.0.0:8080'
#        - name: EPR_TLS_KEY
#          value: '/mnt/elastic-internal/http-certs/tls.key'
#        - name: EPR_TLS_CERT
#          value: '/mnt/elastic-internal/http-certs/tls.crt'                   
        ports:
        - containerPort: 8080
        readinessProbe:
#          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
#          initialDelaySeconds: 240
#          periodSeconds: 10
        resources: 
          requests:
            memory: 1Gi
          limits:
            memory: 1500Mi
#        volumeMounts:
#        - mountPath: /mnt/elastic-internal/http-certs
#          name: elastic-internal-http-certificates
#          readOnly: true
#      volumes:
#      - name: elastic-internal-http-certificates
#        secret:
#          defaultMode: 420
#          optional: false
#          secretName: {{ include "elastic.fullname" . -}}-kb-http-certs-internal
---
apiVersion: v1
kind: Service
metadata:
  labels:
    common.k8s.elastic.co/type: repo
    repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
  name: {{ include "elastic.fullname" . -}}-repo
  namespace: {{ include "elastic.namespace" . }}
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    common.k8s.elastic.co/type: repo
    repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "elastic.fullname" . -}}-repo
  namespace: {{ include "elastic.namespace" . }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  labels:
    common.k8s.elastic.co/type: repo
    repo.k8s.elastic.co/name: {{ include "elastic.fullname" . | quote }}
spec:
  rules:
  - host: {{ .Values.repo.url | quote }}
    http:
      paths:
      - backend:
          service:
            name: {{ include "elastic.fullname" . -}}-repo
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.repo.url | quote }}
    secretName: {{ include "elastic.fullname" . -}}-kb-http-certs-internal
*/}}
