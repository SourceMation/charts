---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ include "elastic.fullname" . }}
  labels:
    {{- include "elastic.labels" . | nindent 4 }}
  namespace: {{ include "elastic.namespace" . }}
spec:
  version: {{ .Values.image.tag | default .Chart.AppVersion }}
  image: docker.elastic.co/elasticsearch/elasticsearch:{{ .Values.image.tag | default .Chart.AppVersion }}
  http:
    service:
      spec:
        type: LoadBalancer
        selector:
          elasticsearch.k8s.elastic.co/cluster-name: {{ include "elastic.fullname" . | quote }}
          elasticsearch.k8s.elastic.co/node-master: "false"
    tls:
      selfSignedCertificate:
        disabled: false
        subjectAltNames:
        - dns: {{ .Values.elasticsearch.url }}
  podDisruptionBudget:
    spec:
      minAvailable: 0
      selector:
        matchLabels:
          elasticsearch.k8s.elastic.co/cluster-name: {{ include "elastic.fullname" . | quote }}
  nodeSets:
  - name: master
    count: 3
    config:
      node.roles: ["master"]
      node.store.allow_mmap: false
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: {{ .Values.elasticsearch.storageClass }}
    podTemplate:
      metadata:
        labels:
          scrape: es
      spec:
#        imagePullSecrets:
#        - name: repo-auth
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 2Gi
            limits:
              memory: 4Gi
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ include "elastic.fullname" . -}}-master"
                topologyKey: kubernetes.io/hostname
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
#                - key: elastic
#                  operator: In
#                  values:
#                  - all
  - name: data
    count: 3
    config:
      node.roles: ["data", "ingest", "ml", "transform", "remote_cluster_client"]
      node.store.allow_mmap: false
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
        storageClassName: {{ .Values.elasticsearch.storageClass }}
    podTemplate:
      metadata:
        labels:
          scrape: es
      spec:
#        imagePullSecrets:
#        - name: repo-auth
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 2Gi
            limits:
              memory: 8Gi
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ include "elastic.fullname" . -}}-data"
                topologyKey: kubernetes.io/hostname
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
#                - key: elastic
#                  operator: In
#                  values:
#                  - all
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "elastic.fullname" . -}}-es-http
  namespace: {{ include "elastic.namespace" . }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

  labels:
    elasticsearch.k8s.elastic.co/cluster-name: {{ include "elastic.fullname" . }}
spec:
  rules:
  - host: {{ .Values.elasticsearch.url }}
    http:
      paths:
      - backend:
          service:
            name: {{ include "elastic.fullname" . -}}-es-http
            port:
              number: 9200
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.elasticsearch.url }}
    secretName: {{ include "elastic.fullname" . -}}-es-http-certs-internal  
