{{- /*

*/}}

{{- if and .Values.agentFleet.enabled .Values.agentServices.enabled }}

{{- with .Values.agentServices.params }}

---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: {{ include "common.names.shortname" $ }}-service
  namespace: {{ include "common.names.namespace" $ }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
spec:
  version: {{ default $.Chart.AppVersion }}
  image: {{ .image.registry }}/{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}
  kibanaRef:
    name: {{ include "common.names.shortname" $ }}
  fleetServerRef:
    name: {{ include "common.names.shortname" $ }}-fleet
  mode: fleet
  policyID: eck-services
  statefulSet:
    serviceName: {{ include "common.names.shortname" $ }}-service-agent-http
    replicas: {{ .count }}
    podTemplate:
      metadata:
        labels:
          scrape: agent-{{ include "common.names.namespace" $ }}
      spec:
        {{- with .tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        {{- with .affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
#        hostNetwork: true
#        dnsPolicy: ClusterFirstWithHostNet
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true

        initContainers:
        - name: wait-for
          image: quay.io/eurolinux/eurolinux-9:latest
          command:
          - /bin/sh
          - -c
          - >
            set -x;
            until curl -f -k -L https://{{ include "common.names.shortname" $ -}}-fleet-agent-http:8220/api/status; do sleep 2; done

        containers:
        - name: agent
          resources:
            requests:
              memory: 800Mi
              cpu: 1500m
            limits:
              memory: {{ .memory | quote }}
              cpu: {{ .cpu | quote }}
          volumeMounts:
          - mountPath: /mnt/elastic-internal/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
        securityContext:
          runAsUser: 0
        volumes:
        - name: agent-data
          emptyDir: {}
        - name: elastic-internal-http-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: {{ include "common.names.shortname" $ }}-es-http-certs-internal

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.shortname" $ }}-service-agent-http
  namespace: {{ include "common.names.namespace" $ }}
  {{- with .service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
#    agent.k8s.elastic.co/name: {{ include "common.names.shortname" $ }}-service
#    common.k8s.elastic.co/type: agent
spec:
  type: LoadBalancer
  selector:
    agent.k8s.elastic.co/name: {{ include "common.names.shortname" $ }}-service
  ports:
  - protocol: TCP
    port: 8200

{{- end }}

{{- end }}
