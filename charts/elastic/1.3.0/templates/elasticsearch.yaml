{{- /*
https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-elasticsearch-specification.html
*/}}



{{- if .Values.elasticsearch.enabled }}

  {{- with .Values.elasticsearch.params }}

---
apiVersion: {{ include "common.capabilities.elasticsearch.apiVersion" .}}
kind: Elasticsearch
metadata:
  name: {{ include "common.names.shortname" $ }}
  namespace: {{ include "common.names.namespace" $ }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
spec:
  version: {{ default $.Chart.AppVersion .image.tag }}
  auth:
    disableElasticUser: true
    fileRealm:
    - secretName: {{ include "common.names.shortname" $ }}-es-elastic-custom-user
  monitoring:
    metrics:
      elasticsearchRefs:
      - name: {{ include "common.names.shortname" $ }}
    logs:
      elasticsearchRefs:
      - name: {{ include "common.names.shortname" $ }}
  image: {{ .image.registry }}/{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}
  http:
    service:
      {{- with .service.annotations }}
      metadata:
        annotations:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      spec:
        type: LoadBalancer
        selector:
          elasticsearch.k8s.elastic.co/cluster-name: {{ include "common.names.shortname" $ | quote }}
          elasticsearch.k8s.elastic.co/node-master: "false"
    tls:
      {{- if not $.Values.tlsSecretName }}
      selfSignedCertificate:
        disabled: false
        subjectAltNames:
        {{- if $.Values.elasticsearch.params.ingress.enabled }}
        - dns: {{ .ingress.hostname | quote }}
        {{- end }}
        {{- if $.Values.agentServices.enabled }}
        - dns: {{ $.Values.agentServices.params.roles.apm.ingress.hostname | quote }}
        - dns: "{{ include "common.names.shortname" $ }}-service-agent.{{ include "common.names.namespace" $ }}.svc"
        {{- end }}
      {{- else }}
      certificate:
        secretName: {{ $.Values.tlsSecretName | quote }}   
      {{- end }}
  {{- with .pdb }}
  podDisruptionBudget:
    spec:
      minAvailable: {{ . }}
      selector:
        matchLabels:
          elasticsearch.k8s.elastic.co/node-master: "true"
  {{- end }}
  nodeSets:
    {{- range $k, $v := .roles }}
  - name: {{ $k }}
    count: {{ $v.count }}
    config:
      {{- toYaml $v.config | nindent 6 }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ $v.storage.size }}
        {{- if $v.storage.storageClass }}
        storageClassName: {{ $v.storage.storageClass }}
        {{- end }}
    podTemplate:
      metadata:
        labels:
          scrape: es-{{ include "common.names.namespace" $ }}
          {{- with $v.labels }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      spec:
        {{- with $.Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        initContainers:
        - name: max-map-count
          image: quay.io/eurolinux/eurolinux-9:latest
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - mountPath: /hostfs/
              name: hostfs
          command:
          - 'bash'
          - '-e'
          - '-c'
          - |-
            echo 262144 > /hostfs/proc/sys/vm/max_map_count
        - name: max-map-count-check
          image: quay.io/eurolinux/eurolinux-9:latest
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - mountPath: /hostfs/
              name: hostfs
          command: ['sh', '-c', "while true; do mmc=$(cat /hostfs/proc/sys/vm/max_map_count); if [ ${mmc} -eq 262144 ]; then exit 0; else echo 'vm.max_map_count not equal l262144'; fi; sleep 1; done"]
        volumes:
        - name: hostfs
          hostPath:
            path: /
        containers:
        - name: elasticsearch
          resources:
            limits:
              cpu: {{ $v.cpu }}
              memory: {{ $v.memory }}
        {{- with $v.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
        {{- end }}

        {{- with $v.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
    {{- end }}



  {{- end }}
{{- end }}


{{- if .Values.elasticsearch.enabled }}
  {{- with .Values.elasticsearch.params }}
    {{- range $k, $v := .roles }}
      {{- if $v.autoscaling.enabled }}
---
apiVersion: autoscaling.k8s.elastic.co/v1alpha1
kind: ElasticsearchAutoscaler
metadata:
  name: {{ include "common.names.shortname" $ }}-{{ $k }}
  labels:
  {{- include "common.labels.labels" $ | nindent 4 }}
  namespace: {{ include "common.names.namespace" $ }}
spec:
  elasticsearchRef:
    name: {{ include "common.names.shortname" $ }}
  policies:
    - name: {{ $k }}
      roles: 
        {{- toYaml $v.config.node.roles | nindent 8 }}
      resources:
        nodeCount:
          min: {{ $v.count }}
          max: {{ default $v.count $v.autoscaling.maxNodes }}
        cpu:
          min: {{ $v.cpu }}
          max: {{ default $v.cpu $v.autoscaling.maxCpu }}
        memory:
          min: {{ $v.memory }}
          max: {{ default $v.memory $v.autoscaling.maxMemory }}
        storage:
          min: {{ $v.storage.size }}
          max: {{ default $v.storage.size $v.autoscaling.maxStorage }}


      {{- end -}}
    {{- end -}}
  {{- end }}
{{- end }}



{{- if and $.Values.elasticsearch.enabled $.Values.elasticsearch.params.ingress.enabled }}

  {{- with .Values.elasticsearch.params }}

---
apiVersion: {{ include "common.capabilities.ingress.apiVersion" $ }}
kind: Ingress
metadata:
  name: {{ include "common.names.shortname" $ -}}-es-http
  namespace: {{ include "common.names.namespace" $ }}
  {{- with .ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}  
    elasticsearch.k8s.elastic.co/cluster-name: {{ include "common.names.shortname" $ }}
spec:
  {{- if .ingress.ingressClassName }}
  ingressClassName: {{ .ingress.ingressClassName | quote }}
  {{- end }}
  rules:
  {{- if .ingress.hostname }}
  - host: {{ .ingress.hostname | quote }}
    http:
      paths:
      - backend:
          service:
            name: {{ include "common.names.shortname" $ -}}-es-http
            port:
              number: 9200
        path: /
        pathType: Prefix
  {{- end }}

  tls:
  - hosts:
    - {{ .ingress.hostname | quote }}
    {{- if  not $.Values.tlsSecretName  }}
    secretName: {{ include "common.names.shortname" $ -}}-es-http-certs-internal  
    {{- else }}
    secretName: {{ $.Values.tlsSecretName | quote }}
    {{- end }}

  {{- end }}
{{- end }}


{{- /*
https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-users-and-roles.html#k8s-default-elastic-user
*/}}

{{- if $.Values.elasticsearch.enabled }}

  {{- with $.Values.elasticsearch.params }}

---
apiVersion: v1
stringData:
  username: {{ default "admin" .auth.username }} 
  password: {{ default "password" .auth.password }}
  roles: superuser 
kind: Secret
metadata:
#  annotations:
#    meta.helm.sh/release-namespace: {{ include "common.names.namespace" $ }}
#    meta.helm.sh/release-name: {{ include "common.names.shortname" $ }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
#    app.kubernetes.io/managed-by: Helm
#    common.k8s.elastic.co/type: elasticsearch
#    eck.k8s.elastic.co/credentials: "true"
#    eck.k8s.elastic.co/owner-kind: Elasticsearch
#    eck.k8s.elastic.co/owner-name: {{ include "common.names.shortname" $ }}
#    eck.k8s.elastic.co/owner-namespace: {{ include "common.names.namespace" $ }}
#    elasticsearch.k8s.elastic.co/cluster-name: {{ include "common.names.shortname" $ }}
  name: {{ include "common.names.shortname" $ }}-es-elastic-custom-user
  namespace: {{ include "common.names.namespace" $ }}
#type: Opaque
type: kubernetes.io/basic-auth

  {{- end }}
{{- end }}

