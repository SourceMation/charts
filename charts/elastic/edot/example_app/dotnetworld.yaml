apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnetworld
spec:
  selector:
    matchLabels:
      app: dotnetworld
  replicas: 1
  template:
    metadata:
      labels:
        app: dotnetworld
    spec:
      containers:
      - name: dotnetworld
        image: karthequian/dotnetexample:latest # Make sure this image exposes the app on port 80
        ports:
        - containerPort: 80 # The port your application listens on inside the container
---
apiVersion: v1
kind: Service
metadata:
 name: dotnetworld
spec:
 type: ClusterIP # Changed from NodePort - optimal for Ingress
 selector:
   app: dotnetworld # Selects pods with label "app: dotnetworld"
 ports:
   - name: http      # Renamed port name for clarity (optional)
     protocol: TCP
     port: 80       # The port the Service listens on within the cluster
     targetPort: 80 # The port on the Pods (containerPort) to forward traffic to
---
apiVersion: networking.k8s.io/v1 # Use networking.k8s.io/v1 for current K8s versions
kind: Ingress
metadata:
  name: dotnetworld-ingress
  # --- ANNOTATIONS ---
  # Annotations are often REQUIRED for specific Ingress controllers
  # Uncomment and adjust the relevant annotation for your controller
  # Example for Nginx Ingress Controller:
  # annotations:
  #   kubernetes.io/ingress.class: "nginx"
  # Example for TLS/SSL using cert-manager (if you have it installed):
  #   cert-manager.io/cluster-issuer: "letsencrypt-prod" # Replace with your issuer name
spec:
  # --- TLS/SSL ---
  # Uncomment this section if you want to enable HTTPS
  # Ensure you have a Secret named 'example-com-tls' containing your TLS cert and key
  # Or configure cert-manager with annotations above to create it automatically
  # tls:
  # - hosts:
  #   - example.com
  #   secretName: example-com-tls # Secret containing TLS certificate and key
  rules:
  - host: dotnet-world.apps.dev0.lab.linuxpolska.pl # Your desired domain
    http:
      paths:
      - path: / # Route traffic for the root path
        pathType: Prefix # Matches paths starting with "/"
        backend:
          service:
            name: dotnetworld   # Name of the Service to route traffic to
            port:
              number: 80      # Port number defined in the Service
