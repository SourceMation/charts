jenkins:
  agent:
    enabled: true
    #alwaysPullImage: false
    #jnlpregistry:
    #image:
    #  repository: "jenkins/inbound-agent"
    #  tag: ""
    imagePullSecretName: ""
    nodeSelector: {}
  
  controller:
    affinity: {}
      #nodeAffinity:
      #  requiredDuringSchedulingIgnoredDuringExecution:
      #    nodeSelectorTerms:
      #    - matchExpressions:
      #      - key: node-role.kubernetes.io/infra
      #        operator: Exists
    #nodeSelector: {}
    #tolerations:
    #  - effect: NoSchedule
    #    key: node-role.kubernetes.io/infra
    #    operator: Exists`
    admin:
      username: "admin"
      password: "P@ssword1"
    disableRememberMe: false
    #containerSecurityContext:
    #  runAsUser: 1000
    #  runAsGroup: 1000
    #containerEnv:
    #  - name: http_proxy
    #    value: forti-prod.net.mgmt:8080
    #  - name: https_proxy
    #    value: forti-prod.net.mgmt:8080
    #  - name: no_proxy
    #    value: localhost,.example.pl,.example.ad.intra
    #initContainerEnv:
    #  - name: http_proxy
    #    value: forti-prod.net.mgmt:8080
    #  - name: https_proxy
    #    value: forti-prod.net.mgmt:8080
    #  - name: no_proxy
    #    value: localhost,.example.pl,.example.ad.intra
    #  - name: JAVA_OPTS
    #    value: -Djava.net.preferIPv4Stack=true -Dhttp.proxyHost=forti-prod.net.mgmt -Dhttp.proxyPort=8080 -Dhttps.proxyHost=forti-prod.net.mgmt -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=localhost|.example.com|.example.ad.intra
    #image:
    #  registry: "docker.io"
    #  repository: "jenkins/jenkins"
    #  tag: ""
    #  tagLabel: ""
    #  pullPolicy: "Always"
    imagePullSecretName: ""
    #httpsKeyStore:
    #  enable: true
    #  jenkinsHttpsJksPasswordSecretName: ""      
    #  jenkinsHttpsJksPasswordSecretKey: "https-jks-password"
    #  jenkinsHttpsJksSecretName: ""
    #  jenkinsHttpsJksSecretKey: "jenkins-jks-file"
    #  disableSecretMount: false
    #  httpPort: 8443
    #  path: "/var/jenkins_keystore"
    #  fileName: "keystore.jks"
    #  password: "P@ssword1"
    sidecars:
      configAutoReload:
        enabled: true
        #image:
        #  registry: "docker.io"
        #  repository: "kiwigrid/k8s-sidecar"
        #  tag: ""
        #imagePullPolicy: IfNotPresent
        resources: {}
    ingress:
      enabled: true
      #annotations:
      #  route.openshift.io/termination: edge
      apiVersion: "networking.k8s.io/v1"
      ingressClassName: ""
      cert:
        issuerName: "default-selfsigned-ca"
        issuerKind: "ClusterIssuer"
      hostName: "jenkins.apps.example.com"
      #paths: []
      tls:
        - secretName: "jenkins-tls-cert"
          hosts:
            - "{{ .Values.controller.ingress.hostName }}"
    installPlugins:
      - kubernetes:4313.va_9b_4fe2a_0e34
      - workflow-aggregator:600.vb_57cdd26fdd7
      - git:5.7.0
      - git-client:6.1.2
      - configuration-as-code:1932.v75cb_b_f1b_698d
      - cloudbees-disk-usage-simple:232.v713eeed2e1f4
      - prometheus:819.v50953a_c560dd
    additionalPlugins:
      - pipeline-stage-view:2.37
      - pipeline-utility-steps:2.18.0
      - generic-webhook-trigger:2.3.1
      - rebuild:338.va_0a_b_50e29397
    #  - ssh-slaves:3.1031.v72c6b_883b_869
    #  - swarm:3.49
    #  - gitea:238.v626a_cf5e1940
    #  - bitbucket:263.v7f6ef03c9ef8
    #  - atlassian-bitbucket-server-integration:4.1.4
    prometheus:
      enabled: true
    resources:
      requests:
        memory: "512Mi"
        cpu: "512m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
    serviceType: ClusterIP
    #serviceType: LoadBalancer
    servicePort: 8080
    targetPort: 8080
    javaOpts: >
      -Xmx2g
      -Djenkins.install.runSetupWizard=false
      -Dorg.jenkinsci.plugins.casc.ConfigurationAsCode.systemConfig=/var/jenkins_home/casc_configs/jenkins-casc.yaml
    #  -Djava.net.preferIPv4Stack=true -Dhttp.proxyHost=forti-prod.net.mgmt -Dhttp.proxyPort=8080 -Dhttps.proxyHost=forti-prod.net.mgmt -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=localhost|.example.com|.example.ad.intra
    #jenkinsUrl: https://jenkins.apps.example.com
    #jenkinsUrlProtocol: https
    #jenkinsUriPrefix: /jenkins
    numExecutors: 1
    updateStrategy: {}
  
  persistence:
    enabled: true
    accessMode: "ReadWriteOnce"
    storageClass: ""
    size: "8Gi"
