jenkins:
  metadata:
    annotations:
      kubernetes.io/ingress.class: "nginx"
  params:
    ingress:
      enabled: true
      hostName: "jenkins.apps.example.com"
  controller:
    affinity: {}
    nodeSelector: {}
    admin:
      username: "admin"
      password: "P@ssword1"
    image:
      registry: "docker.io"
      repository: "jenkins/jenkins"
      tag: ""
      tagLabel: "jdk17"
      pullPolicy: "Always"
    imagePullSecretName: ""
    installPlugins:
      - kubernetes:4290.v93ea_4b_b_26a_61
      - workflow-aggregator:600.vb_57cdd26fdd7
      - git:5.5.1
      - configuration-as-code:1850.va_a_8c31d3158b_
      - cloudbees-disk-usage-simple:203.v3f46a_7462b_1a_
      - prometheus:787.v52e8f47488fc
    additionalPlugins:
      - pipeline-stage-view:2.34
      - pipeline-utility-steps:2.17.0
      - generic-webhook-trigger:2.2.2
      - rebuild:332.va_1ee476d8f6d
    customResources: false
    persistence:
      enabled: true
      accessMode: "ReadWriteOnce"
      storageClass: ""
      size: "8Gi"
    prometheus:
      enabled: true
    resources:
      requests:
        memory: "512Mi"
        cpu: "512m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
    serviceType: ClusterIP
    servicePort: 8080
    targetPort: 8080
    javaOpts: >
      -Xmx2g
      -Djenkins.install.runSetupWizard=false
      -Dorg.jenkinsci.plugins.casc.ConfigurationAsCode.systemConfig=/var/jenkins_home/casc_configs/jenkins-casc.yaml
    jenkinsUrl: "https://jenkins.apps.example.com"
    updateStrategy: {}
  nameOverride: ""
  fullnameOverride: ""
  namespaceOverride: ""
