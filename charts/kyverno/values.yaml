# kyverno:
#   global:
#     image:
#       registry: ~
#     imagePullSecrets: []
#     nodeSelector: {}

#   # CRDs configuration
#   crds:
#     install: true
#     migration:
#       enabled: true
#       image:
#         registry: ~
#         defaultRegistry: reg.kyverno.io
#         repository: kyverno/kyverno-cli
#         tag: ~
#         pullPolicy: IfNotPresent
#       imagePullSecrets: []
#       nodeSelector: {}
#       podAffinity: {}
#       nodeAffinity: {}
#       securityContext:
#         runAsUser: 65534
#         runAsGroup: 65534
#         runAsNonRoot: true
#         privileged: false
#         allowPrivilegeEscalation: false
#         readOnlyRootFilesystem: true
#         capabilities:
#           drop:
#             - ALL
#         seccompProfile:
#           type: RuntimeDefault
#       podResources:
#         limits:
#           cpu: 100m
#           memory: 256Mi
#         requests:
#           cpu: 10m
#           memory: 64Mi

#   # Configuration
#   config:
#     create: true
#     preserve: true
#     name: ~
#     annotations: {}
#     defaultRegistry: docker.io
#     webhooks:
#       namespaceSelector:
#         matchExpressions:
#         - key: kubernetes.io/metadata.name
#           operator: NotIn
#           values:
#             - kube-system

#   # Metrics configuration
#   metricsConfig:
#     create: true
#     name: ~
#     annotations: {}
#     namespaces:
#       include: []
#       exclude: []

#   # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
#   imagePullSecrets: {}

#   # Tests configuration
#   test:
#     sleep: 20
#     image:
#       registry: ~
#       repository: busybox
#       tag: '1.35'
#       pullPolicy: ~
#     imagePullSecrets: []
#     resources:
#       limits:
#         cpu: 100m
#         memory: 256Mi
#       requests:
#         cpu: 10m
#         memory: 64Mi
#     securityContext:
#       runAsUser: 65534
#       runAsGroup: 65534
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault

#   # -- Additional labels
#   customLabels: {}

#   # WebhooksCleanup configuration
#   webhooksCleanup:
#     enabled: true
#     autoDeleteWebhooks:
#       enabled: false
#     image:
#       registry: ~
#       repository: bitnami/kubectl
#       tag: '1.32.3'
#       pullPolicy: ~
#     imagePullSecrets: []
#     nodeSelector: {}
#     podAffinity: {}
#     nodeAffinity: {}
#     securityContext:
#       runAsUser: 65534
#       runAsGroup: 65534
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault
#     resources:
#       limits:
#         cpu: 100m
#         memory: 256Mi
#       requests:
#         cpu: 10m
#         memory: 64Mi

#   # policyReportsCleanup configuration
#   policyReportsCleanup:
#     enabled: true
#     image:
#       registry: ~
#       repository: bitnami/kubectl
#       tag: '1.32.3'
#       pullPolicy: ~
#     imagePullSecrets: []
#     nodeSelector: {}
#     podAffinity: {}
#     nodeAffinity: {}
#     securityContext:
#       runAsUser: 65534
#       runAsGroup: 65534
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault
#     resources:
#       limits:
#         cpu: 100m
#         memory: 256Mi
#       requests:
#         cpu: 10m
#         memory: 64Mi

#   # Grafana configuration
#   grafana:
#     enabled: false
#     configMapName: '{{ include "kyverno.fullname" . }}-grafana'
#     namespace: ~
#     annotations: {}
#     labels:
#       grafana_dashboard: "1"
#     grafanaDashboard:
#       create: false
#       folder: kyverno
#       allowCrossNamespaceImport: true
#       matchLabels:
#         dashboards: "grafana"

#   # Admission controller configuration
#   admissionController:
#     autoscaling:
#       enabled: false
#       minReplicas: 1
#       maxReplicas: 10
#     replicas: ~
#     revisionHistoryLimit: 10
#     resyncPeriod: 15m
#     podLabels: {}
#     podAnnotations: {}
#     annotations: {}
#     updateStrategy:
#       rollingUpdate:
#         maxSurge: 1
#         maxUnavailable: 40%
#       type: RollingUpdate
#     hostNetwork: false
#     webhookServer:
#       port: 9443
#     dnsPolicy: ClusterFirst
#     dnsConfig: {}
#     nodeSelector: {}
#     imagePullSecrets: []
#     initContainer:
#       image:
#         registry: ~
#         defaultRegistry: reg.kyverno.io
#         repository: kyverno/kyvernopre
#         tag: ~
#         pullPolicy: ~
#       resources:
#         limits:
#           cpu: 100m
#           memory: 256Mi
#         requests:
#           cpu: 10m
#           memory: 64Mi
#       securityContext:
#         runAsNonRoot: true
#         privileged: false
#         allowPrivilegeEscalation: false
#         readOnlyRootFilesystem: true
#         capabilities:
#           drop:
#             - ALL
#         seccompProfile:
#           type: RuntimeDefault
#     container:
#       image:
#         registry: ~
#         defaultRegistry: reg.kyverno.io
#         repository: kyverno/kyverno
#         tag: ~
#         pullPolicy: IfNotPresent
#       resources:
#         limits:
#           memory: 384Mi
#         requests:
#           cpu: 100m
#           memory: 128Mi
#       securityContext:
#         runAsNonRoot: true
#         privileged: false
#         allowPrivilegeEscalation: false
#         readOnlyRootFilesystem: true
#         capabilities:
#           drop:
#             - ALL
#         seccompProfile:
#           type: RuntimeDefault
#     service:
#       port: 443
#       type: ClusterIP
#       nodePort:
#       annotations: {}
#     metricsService:
#       create: true
#       port: 8000
#       type: ClusterIP
#       annotations: {}
#     networkPolicy:
#       enabled: false
#     serviceMonitor:
#       enabled: false
#       namespace: ~
#       interval: 30s
#       scrapeTimeout: 25s
#       secure: false
#       tlsConfig: {}
#     tracing:
#       enabled: false
#       address:
#       port:
#       creds: ''
#     metering:
#       disabled: false
#       config: prometheus
#       port: 8000
#       collector: ''
#       creds: ''
#     profiling:
#       enabled: false
#       port: 6060
#       serviceType: ClusterIP

#   # Background controller configuration
#   backgroundController:
#     enabled: true
#     image:
#       registry: ~
#       defaultRegistry: reg.kyverno.io
#       repository: kyverno/background-controller
#       tag: ~
#       pullPolicy: IfNotPresent
#     imagePullSecrets: []
#     replicas: ~
#     revisionHistoryLimit: 10
#     resyncPeriod: 15m
#     annotations: {}
#     updateStrategy:
#       rollingUpdate:
#         maxSurge: 1
#         maxUnavailable: 40%
#       type: RollingUpdate
#     priorityClassName: ''
#     hostNetwork: false
#     dnsPolicy: ClusterFirst
#     resources:
#       limits:
#         memory: 128Mi
#       requests:
#         cpu: 100m
#         memory: 64Mi
#     nodeSelector: {}
#     securityContext:
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault
#     metricsService:
#       create: true
#       port: 8000
#       type: ClusterIP
#       annotations: {}
#     networkPolicy:
#       enabled: false
#     serviceMonitor:
#       enabled: false
#       namespace: ~
#       interval: 30s
#       scrapeTimeout: 25s
#       secure: false
#       tlsConfig: {}
#     tracing:
#       enabled: false
#       address:
#       port:
#     metering:
#       disabled: false
#       config: prometheus
#       port: 8000
#       collector: ''
#       creds: ''
#     server:
#       port: 9443
#     profiling:
#       enabled: false
#       port: 6060
#       serviceType: ClusterIP

#   # Cleanup controller configuration
#   cleanupController:
#     enabled: true
#     image:
#       registry: ~
#       defaultRegistry: reg.kyverno.io
#       repository: kyverno/cleanup-controller
#       tag: ~
#       pullPolicy: IfNotPresent
#     imagePullSecrets: []
#     replicas: ~
#     revisionHistoryLimit: 10
#     resyncPeriod: 15m
#     annotations: {}
#     updateStrategy:
#       rollingUpdate:
#         maxSurge: 1
#         maxUnavailable: 40%
#       type: RollingUpdate
#     hostNetwork: false
#     server:
#       port: 9443
#     webhookServer:
#       port: 9443
#     dnsPolicy: ClusterFirst
#     resources:
#       limits:
#         memory: 128Mi
#       requests:
#         cpu: 100m
#         memory: 64Mi
#     nodeSelector: {}
#     podSecurityContext: {}
#     securityContext:
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault
#     service:
#       port: 443
#       type: ClusterIP
#     metricsService:
#       create: true
#       port: 8000
#       type: ClusterIP
#     networkPolicy:
#       enabled: false
#       ingressFrom: []
#     serviceMonitor:
#       enabled: false
#       namespace: ~
#       interval: 30s
#       scrapeTimeout: 25s
#       secure: false
#       tlsConfig: {}
#     tracing:
#       enabled: false
#       address:
#       port:
#       creds: ''
#     metering:
#       disabled: false
#       config: prometheus
#       port: 8000
#       collector: ''
#       creds: ''
#     profiling:
#       enabled: false
#       port: 6060
#       serviceType: ClusterIP

#   # Reports controller configuration
#   reportsController:
#     enabled: true
#     image:
#       registry: ~
#       defaultRegistry: reg.kyverno.io
#       repository: kyverno/reports-controller
#       tag: ~
#       pullPolicy: IfNotPresent
#     imagePullSecrets: []
#     replicas: ~
#     revisionHistoryLimit: 10
#     resyncPeriod: 15m
#     updateStrategy:
#       rollingUpdate:
#         maxSurge: 1
#         maxUnavailable: 40%
#       type: RollingUpdate
#     hostNetwork: false
#     dnsPolicy: ClusterFirst
#     resources:
#       limits:
#         memory: 128Mi
#       requests:
#         cpu: 100m
#         memory: 64Mi
#     nodeSelector: {}
#     securityContext:
#       runAsNonRoot: true
#       privileged: false
#       allowPrivilegeEscalation: false
#       readOnlyRootFilesystem: true
#       capabilities:
#         drop:
#           - ALL
#       seccompProfile:
#         type: RuntimeDefault
#     metricsService:
#       create: true
#       port: 8000
#       type: ClusterIP
#       annotations: {}
#     networkPolicy:
#       enabled: false
#     serviceMonitor:
#       enabled: false
#       namespace: ~
#       interval: 30s
#       scrapeTimeout: 25s
#       secure: false
#       tlsConfig: {}
#     tracing:
#       enabled: false
#       address: ~
#       port: ~
#       creds: ~
#     metering:
#       disabled: false
#       config: prometheus
#       port: 8000
#       collector: ~
#       creds: ~
#     server:
#       port: 9443
#     profiling:
#       enabled: false
#       port: 6060
#       serviceType: ClusterIP
#     sanityChecks: true