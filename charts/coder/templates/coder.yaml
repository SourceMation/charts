---
apiVersion: v1
stringData:
  url: postgres://{{ $.Values.postgresql.auth.username }}:{{ $.Values.postgresql.auth.password }}@{{ include "common.names.shortname" . }}-coder-postgresql/{{ .Values.postgresql.auth.database }}?sslmode=require
kind: Secret
metadata:
  name: coder-db-url

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "common.names.shortname" $ }}-tls-cert
  namespace: {{ include "common.names.namespace" $ }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
spec:
  secretName: {{ .Values.coder.coder.ingress.tls.secretName }}
  isCA: false
  usages:
    - server auth
    - client auth
    - key encipherment
    - digital signature
  commonName: {{ .Values.coder.coder.ingress.host }}
  dnsNames:
    - "{{ .Values.coder.coder.ingress.host }}"
  issuerRef:
    group: cert-manager.io
    name: {{ .Values.coder.coder.ingress.tls.issuerName }}
    kind: {{ .Values.coder.coder.ingress.tls.issuerKind }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.shortname" . }}-prometheus 
spec:
  clusterIP: None
  ports:
    - name: prometheus-http
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    app.kubernetes.io/instance: {{ include "common.names.shortname" . }}
    app.kubernetes.io/name: coder
  type: ClusterIP
