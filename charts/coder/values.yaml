coder:
  coder:
    annotations: {}
    nodeSelector: {}
    env:
      - name: "CODER_PG_CONNECTION_URL"
        valueFrom:
          secretKeyRef:
            name: coder-db-url
            key: url
      - name: "CODER_PROMETHEUS_ENABLE"
        value: "true"
    image:
      repo: "ghcr.io/coder/coder"
      #tag: ""
      pullPolicy: "IfNotPresent"
      pullSecrets: []
    ingress:
      enable: true
      host: "coder.apps.example.com"
      className: ""
      tls:
        enable: true
        issuerName: "default-selfsigned-ca"
        issuerKind: "ClusterIssuer"
        secretName: "coder-tls-cert"
    resources: {}
    service:
      enable: true
      type: "LoadBalancer"
      externalTrafficPolicy: "Cluster"
      # if service.type LoadBalancer
      loadBalancerIP: ""
    serviceAccount:
      name: "coder"
    volumes: []
    replicaCount: 1
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/instance"
                    operator: "In"
                    values:
                      - "coder"
              topologyKey: "kubernetes.io/hostname"
            weight: 1

cnpg:
  cluster:
    metadata:
      name: "cnpg-cluster"
    auth:
      username: "coder"
      password: "P@ssword1"
      database: "coder"
      suUsername: "postgres"
      suPassword: "P@ssword1"
    metrics:
      enablePodMonitor: true
    spec:
      instances: 1
      resources:
        requests:
          memory: ""
          cpu: ""
        limits:
          memory: ""
          cpu: ""
      storage:
        accessModes:
          - "ReadWriteOnce"
        size: "10Gi"
        storageClass: ""

