{{- if .Values.global.forgejoApp.enabled }}
  {{- if index .Values.forgejo "postgresql-ha" "enabled" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.names.shortname" $ }}-{{ .Values.forgejo.params.additionalConfigSources.secret.secretName }}
  namespace: {{ include "common.names.namespace" $ }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
type: Opaque
stringData:
  database: |
    {{- with index .Values.forgejo "postgresql-ha" "global" }}
    DB_TYPE = postgres
    HOST = {{ $.Release.Name }}-postgresql-ha-postgresql:5432
    NAME = {{ .postgresql.database }}
    PASSWD = {{ .postgresql.password }}
    USER = {{ .postgresql.username }}
    {{- end }}
  {{- end }}

  {{- if and .Values.forgejo.params.persistence.enabled .Values.forgejo.params.persistence.create }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
  name: {{ include "common.names.shortname" $ }}-{{ .Values.forgejo.params.persistence.claimName }}
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
spec:
    {{- with .Values.forgejo.params.persistence }}
  accessModes: {{ .accessModes | toYaml | nindent 4 }}
  resources:
    requests:
      storage: {{ .size }}
  storageClassName: {{ .storageClass }}
  volumeMode: Filesystem
    {{- end }}
  {{- end }}

  {{- if index .Values.forgejo "postgresql-ha" "enabled" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: metrics-fix
  annotations:
    "helm.sh/hook": post-install
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 60
  template:
    spec:
      initContainers:
        - name: init-delay
          image: busybox
          command: ["sh", "-c", "sleep 360"]
      containers:
        - name: metrics-fix
          image: bitnami/postgresql
      {{- with index .Values.forgejo "postgresql-ha" }}
          env:
            - name: PGPASSWORD
              value: "{{ .postgresql.postgresPassword }}"
          command: ["psql", "-h", "{{ $.Release.Name }}-postgresql-ha-postgresql-headless", "-U", "postgres", "--command=GRANT pg_monitor TO {{ .global.postgresql.username }};"]
      {{- end }}
      restartPolicy: Never
  {{- end }}

{{- end }}
