apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pglogical.fullname" . }}
  labels:
    {{- include "pglogical.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pglogical.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pglogical.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: pkuszczak/postgresql_pglogical:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: Always
          command: ["postgres"]
          args: ["-c", "config_file=/usr/share/postgresql/postgresql.conf"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                ls -al /data &&
                chmod 750 /data/postgresql &&
                initdb -D /data/postgresql &&
                postgres -c config_file=/usr/share/postgresql/postgresql.conf
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ quote $value }}
          {{- end }}
            - name: PRIMARY_NODE_NAME
              value: pglogical-0
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
        storageClassName: vsphere-csi

