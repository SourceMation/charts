apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.controllerManager.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.controllerManager.topologySpreadConstraints | nindent 8 }}
      {{- else }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: ScheduleAnyway
### mod
          labelSelector:
            matchLabels:
              {{- include "chart.selectorLabels" . | nindent 14 }}
### end mod
      {{- end }}

      {{- if .Values.controllerManager.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{- toYaml .Values.controllerManager.nodeAffinity | nindent 10 }}
      {{- end }}

      {{- if .Values.controllerManager.podAffinity }}
        podAffinity:
          {{- toYaml .Values.controllerManager.podAffinity | nindent 10 }}
      {{- end }}

      {{- if .Values.controllerManager.podAntiAffinity }}
        podAntiAffinity:
          {{- toYaml .Values.controllerManager.podAntiAffinity | nindent 10 }}
      {{- end }}

      {{- if .Values.controllerManager.tolerations }}
      tolerations:
        {{- toYaml .Values.controllerManager.tolerations | nindent 8 }}
      {{- end }}

      containers:
        - name: manager
          image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: Always
          command:
            - /manager
          {{- if .Values.controllerManager.arguments }}
          args:
            {{- range $key, $value := .Values.controllerManager.arguments }}
            - --{{ $key }}{{ if $value }}={{ $value }}{{ end }}
            {{- end }}
          {{- end }}
          env:
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ .Values.controllerManager.environment.KUBERNETES_CLUSTER_DOMAIN | quote }}
            - name: ENABLE_WEBHOOKS
              value: {{ .Values.controllerManager.environment.ENABLE_WEBHOOKS | quote }}
            - name: ENABLE_DEBUG
              value: {{ .Values.controllerManager.environment.ENABLE_DEBUG | quote }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          resources:
            {{- toYaml .Values.controllerManager.manager.resources | nindent 12 }}
          {{- with .Values.controllerManager.manager.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.controllerManager.manager.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            {{- if .Values.controllerManager.enabledWebHooks }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            {{- end }}
            {{- if .Values.controllerManager.enabledCaCerts }}
            - mountPath: /etc/ssl/certs/ca-certificates.crt
              name: ca-certificates
              subPath: ca-certificates.crt
              readOnly: true
            {{- end }}
      terminationGracePeriodSeconds: 30
      securityContext:
        {{- toYaml .Values.controllerManager.securityContext | nindent 8 }}
      serviceAccountName: {{ .Values.controllerManager.rbac.serviceAccountName | default (include "chart.fullname" .) }}
      volumes:
        {{- if .Values.controllerManager.enabledWebHooks }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        {{- end }}
        {{- if .Values.controllerManager.enabledCaCerts }}
        - name: ca-certificates
          secret:
            defaultMode: 420
            secretName: {{ .Values.controllerManager.caCertsSecretName | default "ca-certificates" }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
