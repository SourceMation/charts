apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-pg-restore"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  containers:
    - name: postgresql-client
      image: bitnami/postgresql:latest
      env:
        - name: PGPASSWORD
          value: "{{ .Values.postgresql.postgresPassword }}"
        - name: PGUSER
          value: "{{ .Values.postgresql.postgresUser }}"
        - name: PGDATABASE
          value: "{{ .Values.postgresql.postgresDB }}"
      command:
        - sh
        - "-c"
        - |
          echo "Cleaning up any existing databases restoredb1 and restoredb2..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "DROP DATABASE IF EXISTS restoredb1;" &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "DROP DATABASE IF EXISTS restoredb2;" &&
          echo "Creating databases restoredb1 and restoredb2..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "CREATE DATABASE restoredb1;" &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "CREATE DATABASE restoredb2;" &&
          echo "Populating restoredb1 with test data..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -d restoredb1 -c "CREATE TABLE test_table (id SERIAL PRIMARY KEY, name TEXT);" &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -d restoredb1 -c "INSERT INTO test_table (name) VALUES ('value1'), ('value2');" &&
          echo "Dumping restoredb1 to /tmp/backup.sql..." &&
          pg_dump -h {{ .Release.Name }}-postgres -U $PGUSER -d restoredb1 > /tmp/backup.sql &&
          echo "Restoring /tmp/backup.sql to restoredb2..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -d restoredb2 < /tmp/backup.sql &&
          echo "Verifying data in restoredb2..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -d restoredb2 -c "SELECT * FROM test_table;" &&
          echo "Cleaning up databases restoredb1 and restoredb2..." &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "DROP DATABASE restoredb1;" &&
          psql -h {{ .Release.Name }}-postgres -U $PGUSER -c "DROP DATABASE restoredb2;" &&
          echo "Test passed: restoredb1 dumped and restored to restoredb2 successfully."
  restartPolicy: Never